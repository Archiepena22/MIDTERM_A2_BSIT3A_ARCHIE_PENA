@model Library_Management.Models.AuthorDetailsViewModel

@{
    ViewData["Title"] = $"Author: {Model.Name}";
}

<div class="container">
    <div class="row">
        <div class="col-12">
            <!-- Author Information -->
            <div class="card shadow mb-4">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3 text-center">
                            @if (!string.IsNullOrEmpty(Model.ProfileImageUrl))
                            {
                                <img src="@Model.ProfileImageUrl" 
                                     class="rounded-circle img-fluid mb-3" 
                                     style="width: 200px; height: 200px; object-fit: cover;" 
                                     alt="@Model.Name">
                            }
                            else
                            {
                                <div class="bg-secondary rounded-circle mx-auto mb-3 d-flex align-items-center justify-content-center"
                                     style="width: 200px; height: 200px;">
                                    <i class="bi bi-person-fill text-white" style="font-size: 4rem;"></i>
                                </div>
                            }
                        </div>
                        <div class="col-md-9">
                            <h1 class="display-5 fw-bold mb-3">@Model.Name</h1>
                            
                            @if (Model.BirthDate.HasValue)
                            {
                                <p class="text-muted mb-3">
                                    <i class="bi bi-calendar3"></i> Born: @Model.BirthDate.Value.ToString("MMMM dd, yyyy")
                                </p>
                            }

                            <p class="mb-3">
                                <span class="badge bg-primary">@Model.Books.Count books in library</span>
                                @if (Model.IsArchived)
                                {
                                    <span class="badge bg-warning text-dark ms-2">Archived</span>
                                }
                            </p>

                            @if (!string.IsNullOrEmpty(Model.Biography))
                            {
                                <h5 class="fw-semibold">Biography</h5>
                                <p class="mb-0">@Model.Biography</p>
                            }
                        </div>
                    </div>
                    
                    <hr>
                    
                    <div class="d-flex gap-2 flex-wrap">
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left"></i> Back to Authors
                        </a>
                        <a asp-action="Edit" asp-route-id="@Model.AuthorId" class="btn btn-outline-primary">
                            <i class="bi bi-pencil"></i> Edit Author
                        </a>
                        @if (!Model.IsArchived)
                        {
                            <button type="button" class="btn btn-outline-warning" onclick="archiveAuthor('@Model.AuthorId')">
                                <i class="bi bi-archive"></i> Archive
                            </button>
                        }
                        else
                        {
                            <form asp-action="Restore" method="post" class="d-inline">
                                <input type="hidden" name="id" value="@Model.AuthorId" />
                                <button type="submit" class="btn btn-outline-success" 
                                        onclick="return confirm('Are you sure you want to restore this author?')">
                                    <i class="bi bi-arrow-clockwise"></i> Restore
                                </button>
                            </form>
                        }
                    </div>
                </div>
            </div>

            <!-- Books by Author -->
            <div class="card shadow">
                <div class="card-header bg-light">
                    <h4 class="mb-0">Books by @Model.Name</h4>
                </div>
                <div class="card-body">
                    @if (Model.Books.Any())
                    {
                        <div class="row g-4">
                            @foreach (var book in Model.Books)
                            {
                                <div class="col-md-6 col-lg-4 col-xl-3">
                                    <div class="card h-100 shadow-sm">
                                        @if (!string.IsNullOrEmpty(book.CoverImageUrl))
                                        {
                                            <img src="@book.CoverImageUrl" 
                                                 class="card-img-top" 
                                                 style="height: 250px; object-fit: cover;" 
                                                 alt="@book.Title">
                                        }
                                        else
                                        {
                                            <div class="card-img-top bg-light d-flex align-items-center justify-content-center"
                                                 style="height: 250px;">
                                                <i class="bi bi-book text-muted" style="font-size: 3rem;"></i>
                                            </div>
                                        }
                                        
                                        <div class="card-body d-flex flex-column">
                                            <h6 class="card-title">@book.Title</h6>
                                            <p class="card-text small text-muted mb-2">@book.Genre</p>
                                            
                                            @if (book.PublishedDate.HasValue)
                                            {
                                                <p class="card-text small text-muted mb-2">
                                                    Published: @book.PublishedDate.Value.ToString("yyyy")
                                                </p>
                                            }

                                            <p class="card-text small mb-3">
                                                <span class="badge bg-info">@book.AvailableCopies/@book.TotalCopies available</span>
                                            </p>

                                            <div class="mt-auto">
                                                <a asp-controller="Book" asp-action="Details" asp-route-id="@book.BookId" 
                                                   class="btn btn-outline-primary btn-sm w-100">
                                                    <i class="bi bi-eye"></i> View Details
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="bi bi-book" style="font-size: 4rem; color: #6c757d;"></i>
                            <h5 class="mt-3 text-muted">No Books Found</h5>
                            <p class="text-muted">This author doesn't have any books in the library yet.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function archiveAuthor(authorId) {
            if (confirm('Are you sure you want to archive this author? This will also archive all their books.')) {
                var form = document.createElement('form');
                form.method = 'POST';
                form.action = '/Author/Archive/' + authorId;
                
                var token = document.querySelector('input[name="__RequestVerificationToken"]');
                if (token) {
                    var hiddenField = document.createElement('input');
                    hiddenField.type = 'hidden';
                    hiddenField.name = '__RequestVerificationToken';
                    hiddenField.value = token.value;
                    form.appendChild(hiddenField);
                }
                
                document.body.appendChild(form);
                form.submit();
            }
        }
    </script>
}
