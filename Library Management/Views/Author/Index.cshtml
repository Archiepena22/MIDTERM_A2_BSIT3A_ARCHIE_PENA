@model IEnumerable<Library_Management.Models.AuthorListViewModel>

@{
    ViewData["Title"] = "Authors";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="display-6 fw-bold">Authors</h1>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Add New Author
                </a>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <div class="row g-4">
                @foreach (var author in Model)
                {
                    <div class="col-md-6 col-lg-4 col-xl-3">
                        <div class="card h-100 shadow-sm">
                            <div class="card-body d-flex flex-column">
                                <div class="text-center mb-3">
                                    @if (!string.IsNullOrEmpty(author.ProfileImageUrl))
                                    {
                                        <img src="@author.ProfileImageUrl" 
                                             class="rounded-circle mb-3" 
                                             style="width: 80px; height: 80px; object-fit: cover;" 
                                             alt="@author.Name">
                                    }
                                    else
                                    {
                                        <div class="bg-secondary rounded-circle mb-3 mx-auto d-flex align-items-center justify-content-center"
                                             style="width: 80px; height: 80px;">
                                            <i class="bi bi-person-fill text-white" style="font-size: 2rem;"></i>
                                        </div>
                                    }
                                </div>
                                
                                <h5 class="card-title text-center mb-2">@author.Name</h5>
                                
                                @if (author.BirthDate.HasValue)
                                {
                                    <p class="card-text text-muted text-center small mb-2">
                                        Born: @author.BirthDate.Value.ToString("MMM dd, yyyy")
                                    </p>
                                }

                                <p class="card-text text-center mb-3">
                                    <span class="badge bg-info">@author.BookCount books</span>
                                </p>

                                @if (!string.IsNullOrEmpty(author.Biography))
                                {
                                    <p class="card-text small text-muted mb-3" style="overflow: hidden; text-overflow: ellipsis; display: -webkit-box; -webkit-line-clamp: 3; -webkit-box-orient: vertical;">
                                        @author.Biography
                                    </p>
                                }

                                <div class="mt-auto">
                                    <div class="d-grid gap-2">
                                        <a asp-action="Details" asp-route-id="@author.AuthorId" 
                                           class="btn btn-outline-primary btn-sm">
                                            <i class="bi bi-eye"></i> View Details
                                        </a>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Edit" asp-route-id="@author.AuthorId" 
                                               class="btn btn-outline-secondary btn-sm">
                                                <i class="bi bi-pencil"></i> Edit
                                            </a>
                                            <button type="button" class="btn btn-outline-warning btn-sm" 
                                                    onclick="archiveAuthor('@author.AuthorId')">
                                                <i class="bi bi-archive"></i> Archive
                                            </button>
                                            <button type="button" class="btn btn-outline-danger btn-sm" 
                                                    onclick="openDeleteModal('@author.AuthorId')">
                                                <i class="bi bi-trash"></i> Delete
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            @if (!Model.Any())
            {
                <div class="text-center py-5">
                    <i class="bi bi-person-plus" style="font-size: 4rem; color: #6c757d;"></i>
                    <h3 class="mt-3 text-muted">No Authors Found</h3>
                    <p class="text-muted">Start building your library by adding some authors.</p>
                    <a asp-action="Create" class="btn btn-primary mt-3">
                        <i class="bi bi-plus-circle"></i> Add First Author
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="deleteModalContent">
            <!-- Content will be loaded here -->
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function openDeleteModal(authorId) {
            fetch(`/Author/DeleteModal/${authorId}`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('deleteModalContent').innerHTML = html;
                    var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
                    deleteModal.show();
                });
        }

        function archiveAuthor(authorId) {
            if (confirm('Are you sure you want to archive this author? This will also archive all their books.')) {
                var form = document.createElement('form');
                form.method = 'POST';
                form.action = '/Author/Archive/' + authorId;
                
                var token = document.querySelector('input[name="__RequestVerificationToken"]');
                if (token) {
                    var hiddenField = document.createElement('input');
                    hiddenField.type = 'hidden';
                    hiddenField.name = '__RequestVerificationToken';
                    hiddenField.value = token.value;
                    form.appendChild(hiddenField);
                }
                
                document.body.appendChild(form);
                form.submit();
            }
        }
    </script>
}
